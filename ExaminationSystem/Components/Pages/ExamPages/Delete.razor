@page "/instExams/delete"
@using ExaminationSystem.Models
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

@attribute [Authorize(Roles = "Instructor")]

@if (Exam is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div>
        <h3>Are you sure you want to delete this exam?</h3>
        <p><strong>@Exam.Title</strong> - @Exam.Course?.Name</p>

        <button class="btn btn-danger" @onclick="DeleteExam">Delete</button>
        <a href="/instExams" class="btn btn-secondary">Cancel</a>
    </div>
}


@code {
    [SupplyParameterFromQuery] public Guid Id { get; set; }
    private Exam? Exam;

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        Exam = await context.Exams.Include(e => e.Course).FirstOrDefaultAsync(e => e.Id == Id);
    }

    private async Task DeleteExam()
    {
        using var context = DbFactory.CreateDbContext();
        var existing = await context.Exams.FindAsync(Id);
        if (existing != null)
        {
            context.Exams.Remove(existing);
            await context.SaveChangesAsync();
        }
        NavigationManager.NavigateTo("/instExams");
    }
}