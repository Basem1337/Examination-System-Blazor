@page "/instCourses"
@using ExaminationSystem.Data
@using ExaminationSystem.Models
@using Microsoft.EntityFrameworkCore

@inject IDbContextFactory<ApplicationDbContext> DbFactory
@implements IAsyncDisposable

@attribute [Authorize(Roles = "Instructor")]

<div class="d-flex align-content-between justify-content-between">
    <h3>Courses</h3>

    <p>
        <a class="btn btn-primary border-0" href="/instCourses/create" style="background: linear-gradient(to right, #fc6767, #ec008c);"><MudIcon Icon="@Icons.Material.Filled.Add" Title="Add" />Create New</a>
    </p>
</div>

@if (Courses is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Exam ID</th>
                <th>Instructor ID</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var course in Courses)
            {
                <tr>
                    <td>@course.Name</td>
                    <td>@course.Description</td>
                    <td>@course.Exam?.Title</td>
                    <td>@course.Instructor?.Name</td>
                    <td>
                        <a href="/instCourses/details?id=@course.Id">Details</a> |
                        <a href="/instCourses/edit?id=@course.Id">Edit</a> |
                        <a href="/instCourses/delete?id=@course.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private ApplicationDbContext context = default!;
    private List<Course>? Courses;

    protected override async Task OnInitializedAsync()
    {
        context = DbFactory.CreateDbContext();

        Courses = await context.Courses
            .Include(c => c.Instructor)
            .Include(c => c.Exam)
            .ToListAsync();

        Courses = await context.Courses.ToListAsync();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
